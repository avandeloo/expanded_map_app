<!DOCTYPE html>
<html>
  <head>
    <title>Map</title>

  </head>
  <body>
    
    <script>
      
      document.getElementById('travel_mode').addEventListener('change', function () {
        var style = this.value === "TRANSIT" ? 'inline' : 'none';
        document.getElementById('transit_mode').style.display = style;
      });

      document.getElementById('start').addEventListener('click', function () {
        document.getElementById('end').style.display = 'inline';
        document.getElementById('reverse').style.display = 'inline';
        document.getElementById('travel_mode').style.display = 'inline';
        document.getElementById('directions_panel').style.display = 'inline'
        this.style.display = 'none';
      });

      document.getElementById('reverse').addEventListener('click', function () {
        this.style.display = 'none';

      });

      document.getElementById('end').addEventListener('click', function () {          
        window.location.reload();
          
      });      

      function initMap() {
        var current_route_id = document.getElementById("currentRoute").innerHTML;
        var map = new google.maps.Map(document.getElementById('map'), {
          center: {lat: 39.8, lng: -98.7129},
          zoom: 5,
          fullscreenControl: true,
          zoomControl: true,
          mapTypeControl: false,
          streetViewControl: false,
          scrollwheel: false,
          styles: [{ 
                      "featureType": "all", 
                      "elementType": "all", 
                      "stylers": [ { "invert_lightness": true }, { "saturation": 10 }, { "lightness": 30 }, { "gamma": 0.5 }, { "hue": "#435158" } ] 
                  }]
        });
        var marker = new google.maps.Marker({
                         map: map
                       });
        var directionsService = new google.maps.DirectionsService;
        var directionsDisplay = new google.maps.DirectionsRenderer({
          map: map,
          panel: document.getElementById('directions_panel')
        });
        directionsDisplay.setMap(map);

        document.getElementById('travel_mode').addEventListener('change', function() {
                    
          $.get("/api/v1/routes/"+current_route_id+".json", function(route) {
            var startPoint = { lat: parseFloat(route["destination"]["latitude"]), lng: parseFloat(route["destination"]["longitude"]) };
            var endPoint = { lat: parseFloat(route["origin"]["latitude"]), lng: parseFloat(route["origin"]["longitude"]) };
            
            determineRoute(directionsService, directionsDisplay, startPoint, endPoint);
          });
          
        });

        document.getElementById('transit_mode').addEventListener('change', function() { 
          $.get("/api/v1/routes/"+current_route_id+".json", function(route) {
            var startPoint = { lat: parseFloat(route["destination"]["latitude"]), lng: parseFloat(route["destination"]["longitude"]) };
            var endPoint = { lat: parseFloat(route["origin"]["latitude"]), lng: parseFloat(route["origin"]["longitude"]) };
            
            determineRoute(directionsService, directionsDisplay, startPoint, endPoint);
          });
        });

        google.maps.event.addDomListener(window, 'resize', function() {
            var center = map.getCenter();
            google.maps.event.trigger(map, "resize");
            map.setCenter(center);
        });

        $("#start").click(function(){

          function findCurrentPosition() {
            var nickname = "Origin";
            var address_line1;
            var address_line2;
            var marker_role = 0;
            var lat;
            var lng;
            var address;
            
            var geocoder = new google.maps.Geocoder;
            var infowindow = new google.maps.InfoWindow;

            navigator.geolocation.getCurrentPosition(function(position) {
              lat = position.coords.latitude;
              lng = position.coords.longitude;

              function geolocateLocation(geocoder, map, infowindow) {
                var latlng = {lat: lat, lng: lng};
                geocoder.geocode({'location': latlng}, function(results, status) {
                  address = results[0].formatted_address;
                  
                  formatted_address = address.split(", ");
                  
                  address_line1 = formatted_address[0];
                  address_line2 = formatted_address[1] + ", " + formatted_address[2];
                  
                  $.post("/api/v1/routes/new.json", { nickname: nickname, latitude: lat, longitude: lng, address_line1: address_line1, address_line2: address_line2, marker_role: marker_role }, function(route){
                    
                    lat = parseFloat(route.origin.latitude);                    
                    lng = parseFloat(route.origin.longitude);                     

                    var startPoint = {lat: lat, lng: lng};                    

                    lat = parseFloat(route.destination.latitude);                    
                    lng = parseFloat(route.destination.longitude); 
                    
                    var endPoint = {lat: lat, lng: lng};
                    
                    determineRoute(directionsService, directionsDisplay, startPoint, endPoint);
                    
                  });    
                });

              };
                         
              geolocateLocation(geocoder, map, infowindow);
              
            });

          };
          findCurrentPosition();
        });

        $("#reverse").click(function(){
          
          var current_route_id = document.getElementById("currentRoute").innerHTML;   
          function reverseRoute() {
            $.get("/api/v1/routes/"+current_route_id+".json", function(route) {
              var startPoint = { lat: parseFloat(route["destination"]["latitude"]), lng: parseFloat(route["destination"]["longitude"]) };
              var endPoint = { lat: parseFloat(route["origin"]["latitude"]), lng: parseFloat(route["origin"]["longitude"]) };
              
              determineRoute(directionsService, directionsDisplay, startPoint, endPoint);
            });
            
          };
          reverseRoute();
        });

        $("#end").click(function(){

          if (directionsDisplay != null) {
            directionsDisplay.setMap(null);
            directionsDisplay = null;
            document.getElementById('directions_panel').innerHTML = "";
          };


        });
      };

      function determineRoute(directionsService, directionsDisplay, startPoint, endPoint) {
        var selectedTravelMode = document.getElementById('travel_mode').value;
        var selectedTransitMode = document.getElementById('transit_mode').value;
        directionsService.route({
          origin: startPoint,
          destination: endPoint,
          travelMode: selectedTravelMode,
          transitOptions: {
            modes: [selectedTransitMode]
          }

        }, function(response, status) {
          if (status === 'OK') {
            directionsDisplay.setDirections(response);
          } else {
            window.alert('Directions request failed due to ' + status);
          }
        });
      };

    </script>
    <script async defer
    src="https://maps.googleapis.com/maps/api/js?key=<%= ENV['API_HOST_INIT_MAP_KEY'] %>&callback=initMap">
    
    </script>
    
  </body>
</html>